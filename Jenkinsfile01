pipeline {
     agent {
         docker {
             image 'docker:19.03.12-dind'
             args '-u root --privileged -v /var/run/docker.sock:/var/run/docker.sock' // Docker socket and privileges
         }
     }

     environment {
         DOCKERHUB_CRED_ID = 'dockerhub-token'
     }

         stages {
             stage('Checkout') {
                 steps {
                     // Checkout the code from GitHub
                     git url: 'https://github.com/ahmvdshafiq/realtimeChatAppCicd', branch: 'master'
                 }
             }
    
         stage('Install Node.js') {
             steps {
                 script {
                     // Install Node.js v16.20.2 in the Docker container
                     sh '''
                     apk add --no-cache curl
                     curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
                     apk add --no-cache nodejs=16.20.2-r0 npm
                     '''
                 }
             }
         }

          stage('Check Node.js version') {
                 steps {
                     script {
                         // Check Node.js in the Docker container
                         sh 'node -v'  // Using Alpine package manager since Docker base is Alpine
                     }
                 }
             }

         stage('Build') {
             steps {
                 script {
                     docker.build("madbakoyoyo/node-chat-app:${env.BUILD_NUMBER}")
                 }
             }
         }

         stage('Push Docker Image') {
             steps {
                 script {
                     withCredentials([string(credentialsId: 'dh_pass', variable: 'dockethub_pass')]) {
                         docker.withRegistry('https://index.docker.io/v1/', DOCKERHUB_CRED_ID) {
                             sh 'echo $dockethub_pass | docker login -u madbakoyoyo --password-stdin'
                             docker.image("madbakoyoyo/node-chat-app:${env.BUILD_NUMBER}").push()
                         }
                     }
                 }
             }
         }

         stage('Deploy to EC2') {
             steps {
                 script {
                     withCredentials([sshUserPrivateKey(credentialsId: '77fc5aed-0859-4073-9928-cb379b73c0ae', keyFileVariable: 'keyfile')]) {
                         sh """
                         ssh -o StrictHostKeyChecking=no -i ${keyfile} ubuntu@13.215.51.100 <<EOF
                             # Stop and remove any existing container
                             docker stop node-chat-app || true
                             docker rm node-chat-app || true

                             # Pull the latest Docker image
                             docker pull madbakoyoyo/node-chat-app:${env.BUILD_NUMBER}

                             # Run the container
                             docker run -d -p 3000:3000 --name node-chat-app madbakoyoyo/node-chat-app:${env.BUILD_NUMBER}
EOF
                         """
                     }
                 }
             }
         }
     }
 }



